This is a testharness.js-based test.
FAIL Closing must be propagated forward: starts closed; preventClose omitted; fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose omitted; rejected close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = undefined (falsy); fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = null (falsy); fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = false (falsy); fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = 0 (falsy); fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = -0 (falsy); fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = NaN (falsy); fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose =  (falsy); fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = true (truthy) rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = a (truthy) rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = 1 (truthy) rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = Symbol() (truthy) rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = [object Object] (truthy) rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true rs.pipeTo is not a function
FAIL Closing must be propagated forward: starts closed; preventClose = true, preventAbort = true, preventCancel = true rs.pipeTo is not a function
FAIL Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: becomes closed asynchronously; preventClose omitted; rejected close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: becomes closed asynchronously; preventClose = true rs.pipeTo is not a function
FAIL Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose omitted; rejected close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: becomes closed asynchronously; dest never desires chunks; preventClose = true rs.pipeTo is not a function
FAIL Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; fulfilled close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: becomes closed after one chunk; preventClose omitted; rejected close promise rs.pipeTo is not a function
FAIL Closing must be propagated forward: becomes closed after one chunk; preventClose = true rs.pipeTo is not a function
FAIL Closing must be propagated forward: shutdown must not occur until the final write completes rs.pipeTo is not a function
Harness: the test ran to completion.

